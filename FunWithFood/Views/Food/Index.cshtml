@using FunWithFood.ViewModels
@{
    ViewData["Title"] = "Food, Food and Food!";
}

@model FoodDisplayViewModel

<div class="text-center">
    <h1 class="display-4 cuisine-font">Hungry?</h1>
</div>
<div class="text-center">
    <div class="card text-center mx-auto" style="width: 18rem;">
        <div class="card-image-container" style="width: 18rem; height: 200px">
            <img src="data:image/jpeg;base64,@Model.ImageBase64" alt="Food Image" class="card-img-top food-image">
        </div>
        <div class="card-body">
            <h5 class="card-title">@Model.Name</h5>
            <p class="card-text">@Model.CuisineType</p>
        </div>
    </div>

    <button id="newFoodButton" class="btn btn-primary mt-3 mx-auto">Show Another Food</button>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(function () {
        const generateSpinner = function () {
            const spinner = $('<div>')
                .addClass('spinner-border text-primary text-center m-auto')
                .attr('role', 'status');

            const hiddenText = $('<span>')
                .addClass('visually-hidden')
                .text('Loading...');

            spinner.append(hiddenText);

            return spinner;
        }

        $('#newFoodButton').on('click', function () {
            const imageContainer = $('.card-image-container'); 
            const cardBody = $('.card-body'); 
            const spinner = generateSpinner(); 

            imageContainer.html('').append(spinner);

            cardBody.html('<p>Loading new food...</p>');

            $.ajax({
                url: '@Url.Action("GetRandomFood", "Food")',
                type: 'GET',
            })
                .then((data) => {
                    
                    setTimeout(() => {
                        
                        imageContainer.html(`
                                <img src="data:image/jpeg;base64,${data.imageBase64}" alt="Food Image" class="card-img-top food-image">
                            `);

                        cardBody.html(`
                                <h5 class="card-title">${data.name}</h5>
                                <p class="card-text">${data.cuisineType}</p>
                            `);
                    }, 500); 
                },
                    () => {
                        
                        imageContainer.html('<p class="text-danger">Error loading image.</p>');
                        cardBody.html('<p class="text-danger">Could not load food details.</p>');
                    });
        });

    })

</script>